





#pragma region 함수 호출 규약이란?

// 함수의 전달인자의 스택을 쌓는 방법과 함수의 호출과정에 할당된 스택 프레임을 반환하는 방법 둘 다 두 가지가 존재한다.
//      ㄴA라는 함수가 B라는 함수를 호출한다, 
//          - B라는 함수가 끝나면 스스로 스택 프레임을 정리해 줄지,
//          - A(함수 호출자)가 B의 스택 프레임을 정리해 줄지,

// 함수 호출 규약 : 이렇게 함수 인자전달, 스택 프레임을 반환하는 방식을 약속해 놓은 것.
//      ㄴ약속(규칙)이 없으면 무질서해 진다. >> 협업 어려움!

#pragma endregion


#pragma region _cdecl, _stdcall

// _cdecl 호출 규약
// - 디폴트 호출 규약이다.
// - 오른쪽에 전달되는 인자가 먼저 스택에 쌓이는 방식
// - 반환시 함수를 호출하는 호출자가 스택 프레임을 반환하는 방식 (main에서 호출된 함수는 main이 처리되는 느낌?)


// _stdcall 호출 규약
// - 똑같이 오른쪽에 전달되는 인자가 먼저 스택에 쌓이는 방식
// - 반환시 호출된 함수 내에서 스택 프레임이 반환되는 방식이다.

#pragma endregion


#pragma region _fastcall

// 해당 함수는 레지스터에서 실해되므로 빠르게 동작한다.

#pragma endregion